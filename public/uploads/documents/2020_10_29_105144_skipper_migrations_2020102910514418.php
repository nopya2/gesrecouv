<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: 3ac1c1c2-c4af-4464-a802-0279e32e8e2a
 * Migration datetime: 2020-10-29 10:51:44.185493
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations2020102910514418 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('etablissements', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('nom');
            $table->string('abbreviation')->nullable(true);
            $table->string('telephone1')->nullable(true);
            $table->string('telephone2')->nullable(true);
            $table->string('email')->nullable(true);
            $table->string('siteweb')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->engine = 'innoDB';
        });
        Schema::create('cycles', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('etablissement_id')->nullable(true)->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('filieres', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('libelle');
            $table->string('code')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('cycle_filiere', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('filiere_id')->unsigned();
            $table->bigInteger('cycle_id')->unsigned();
            $table->integer('niveau');
        });
        Schema::create('demandes', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->bigInteger('cycle_filiere_id')->nullable(true)->unsigned();
            $table->enum('statut', [annulé,accepté,rejeté,enregistré])->nullable(true)->default(enregistré);
            $table->string('numero')->nullable(true);
            $table->string('annee_academique');
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->bigInteger('etudiant_id')->nullable(true)->unsigned();
            $table->bigInteger('etablissement_id')->nullable(true)->unsigned();
            $table->bigInteger('type_demande_id')->nullable(true)->unsigned();
            $table->bigInteger('mode_admission_id')->nullable(true)->unsigned();
        });
        Schema::create('personnes', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('nom');
            $table->string('prenom')->nullable(true);
            $table->string('avatar')->nullable(true);
            $table->date('date_naissance')->nullable(true);
            $table->string('lieu_naissance')->nullable(true);
            $table->string('email')->unique();
            $table->string('telephone1')->nullable(true);
            $table->string('telephone2')->nullable(true);
            $table->enum('sexe', [M,F])->nullable(true);
            $table->enum('situation_matrimoniale', [célibataire,marié,veuf,En concubinage])->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('etudiants', function (Blueprint $table) {
            $table->bigInteger('id')->unsigned();
            $table->string('nr_matricule')->nullable(true);
            $table->string('nr_nip')->nullable(true);
            $table->boolean('est_boursier')->nullable(true);
            $table->boolean('est_salarie')->nullable(true);
            $table->string('nom_tuteur')->nullable(true);
            $table->string('prenom_tuteur')->nullable(true);
            $table->string('contact_tuteur')->nullable(true);
            $table->string('ville_tuteur')->nullable(true);
            $table->date('date_inscription')->nullable(true);
            $table->enum('statut', [postulant,étudiant])->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->primary(['id']);
        });
        Schema::create('type_documents', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('libelle');
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('documents', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->string('chemin');
            $table->bigInteger('type_document_id')->nullable(true)->unsigned();
            $table->bigInteger('demande_id')->nullable(true)->unsigned();
            $table->bigInteger('etudiant_id')->nullable(true)->unsigned();
        });
        Schema::create('cycle_filiere_type_document', function (Blueprint $table) {
            $table->bigInteger('type_document_id')->unsigned();
            $table->bigInteger('cycle_filiere_id')->unsigned();
            $table->primary(['type_document_id','cycle_filiere_id']);
        });
        Schema::create('mode_admissions', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->enum('diplome_obtenu', [baccalauréat,autre_diplome])->nullable(true);
            $table->enum('serie', [a1,b,c,d,e,a2,f1,f2])->nullable(true)->default(a1);
            $table->enum('mention', [passable,assez-bien,bien,très-bien,parfait])->nullable(true)->default(passable);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('type_demandes', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('libelle')->nullable(true)->unique();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('cursus', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->integer('niveau')->unsigned();
            $table->string('annee_academique')->nullable(true);
            $table->bigInteger('etudiant_id')->unsigned();
            $table->bigInteger('cycle_filiere_id')->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('roles', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('libelle')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('droits', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->string('libelle');
        });
        Schema::create('role_droit', function (Blueprint $table) {
            $table->bigInteger('droit_id')->unsigned();
            $table->bigInteger('role_id')->unsigned();
            $table->primary(['droit_id','role_id']);
        });
        Schema::create('role_personne', function (Blueprint $table) {
            $table->bigInteger('personne_id')->unsigned();
            $table->bigInteger('role_id')->unsigned();
            $table->primary(['personne_id','role_id']);
        });
        Schema::create('logements', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned();
            $table->string('nr_chambre')->nullable(true);
            $table->string('batiment')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
        });
        Schema::create('logement_etudiant', function (Blueprint $table) {
            $table->bigInteger('etudiant_id')->unsigned();
            $table->bigInteger('logement_id')->unsigned();
            $table->dateTime('date_fin')->nullable(true);
            $table->string('nr_bourse')->nullable(true);
            $table->dateTime('date_dbt')->nullable(true);
            $table->timestamp('created_at')->nullable(true);
            $table->timestamp('updated_at')->nullable(true);
            $table->primary(['etudiant_id','logement_id']);
        });
        Schema::table('cycles', function (Blueprint $table) {
            $table->foreign('etablissement_id')->references('id')->on('etablissements');
        });
        Schema::table('demandes', function (Blueprint $table) {
            $table->foreign('cycle_filiere_id')->references('id')->on('cycle_filiere');
        });
        Schema::table('demandes', function (Blueprint $table) {
            $table->foreign('etudiant_id')->references('id')->on('etudiants')->onDelete('cascade')->onUpdate('cascade');
        });
        Schema::table('demandes', function (Blueprint $table) {
            $table->foreign('etablissement_id')->references('id')->on('etablissements');
        });
        Schema::table('demandes', function (Blueprint $table) {
            $table->foreign('type_demande_id')->references('id')->on('type_demandes');
        });
        Schema::table('demandes', function (Blueprint $table) {
            $table->foreign('mode_admission_id')->references('id')->on('mode_admissions');
        });
        Schema::table('etudiants', function (Blueprint $table) {
            $table->foreign('id')->references('id')->on('personnes');
        });
        Schema::table('documents', function (Blueprint $table) {
            $table->foreign('type_document_id')->references('id')->on('type_documents');
        });
        Schema::table('documents', function (Blueprint $table) {
            $table->foreign('demande_id')->references('id')->on('demandes');
        });
        Schema::table('documents', function (Blueprint $table) {
            $table->foreign('etudiant_id')->references('id')->on('etudiants');
        });
        Schema::table('cycle_filiere', function (Blueprint $table) {
            $table->foreign('filiere_id')->references('id')->on('filieres');
            $table->foreign('cycle_id')->references('id')->on('cycles');
        });
        Schema::table('cycle_filiere_type_document', function (Blueprint $table) {
            $table->foreign('type_document_id')->references('id')->on('type_documents');
            $table->foreign('cycle_filiere_id')->references('id')->on('cycle_filiere');
        });
        Schema::table('cursus', function (Blueprint $table) {
            $table->foreign('etudiant_id')->references('id')->on('etudiants');
            $table->foreign('cycle_filiere_id')->references('id')->on('cycle_filiere');
        });
        Schema::table('role_droit', function (Blueprint $table) {
            $table->foreign('droit_id')->references('id')->on('droits');
            $table->foreign('role_id')->references('id')->on('roles');
        });
        Schema::table('role_personne', function (Blueprint $table) {
            $table->foreign('personne_id')->references('id')->on('personnes');
            $table->foreign('role_id')->references('id')->on('roles');
        });
        Schema::table('logement_etudiant', function (Blueprint $table) {
            $table->foreign('etudiant_id')->references('id')->on('etudiants');
            $table->foreign('logement_id')->references('id')->on('logements');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::table('logement_etudiant', function (Blueprint $table) {
            $table->dropForeign(['etudiant_id']);
            $table->dropForeign(['logement_id']);
        });
        Schema::table('role_personne', function (Blueprint $table) {
            $table->dropForeign(['personne_id']);
            $table->dropForeign(['role_id']);
        });
        Schema::table('role_droit', function (Blueprint $table) {
            $table->dropForeign(['droit_id']);
            $table->dropForeign(['role_id']);
        });
        Schema::table('cursus', function (Blueprint $table) {
            $table->dropForeign(['etudiant_id']);
            $table->dropForeign(['cycle_filiere_id']);
        });
        Schema::table('cycle_filiere_type_document', function (Blueprint $table) {
            $table->dropForeign(['type_document_id']);
            $table->dropForeign(['cycle_filiere_id']);
        });
        Schema::table('cycle_filiere', function (Blueprint $table) {
            $table->dropForeign(['filiere_id']);
            $table->dropForeign(['cycle_id']);
        });
        if (Schema::hasTable('documents')) {
            Schema::table('documents', function (Blueprint $table) {
                $table->dropForeign(['etudiant_id']);
            });
        }
        if (Schema::hasTable('documents')) {
            Schema::table('documents', function (Blueprint $table) {
                $table->dropForeign(['demande_id']);
            });
        }
        if (Schema::hasTable('documents')) {
            Schema::table('documents', function (Blueprint $table) {
                $table->dropForeign(['type_document_id']);
            });
        }
        if (Schema::hasTable('etudiants')) {
            Schema::table('etudiants', function (Blueprint $table) {
                $table->dropForeign(['id']);
            });
        }
        if (Schema::hasTable('demandes')) {
            Schema::table('demandes', function (Blueprint $table) {
                $table->dropForeign(['mode_admission_id']);
            });
        }
        if (Schema::hasTable('demandes')) {
            Schema::table('demandes', function (Blueprint $table) {
                $table->dropForeign(['type_demande_id']);
            });
        }
        if (Schema::hasTable('demandes')) {
            Schema::table('demandes', function (Blueprint $table) {
                $table->dropForeign(['etablissement_id']);
            });
        }
        if (Schema::hasTable('demandes')) {
            Schema::table('demandes', function (Blueprint $table) {
                $table->dropForeign(['etudiant_id']);
            });
        }
        if (Schema::hasTable('demandes')) {
            Schema::table('demandes', function (Blueprint $table) {
                $table->dropForeign(['cycle_filiere_id']);
            });
        }
        if (Schema::hasTable('cycles')) {
            Schema::table('cycles', function (Blueprint $table) {
                $table->dropForeign(['etablissement_id']);
            });
        }
        Schema::dropIfExists('logement_etudiant');
        Schema::dropIfExists('logements');
        Schema::dropIfExists('role_personne');
        Schema::dropIfExists('role_droit');
        Schema::dropIfExists('droits');
        Schema::dropIfExists('roles');
        Schema::dropIfExists('cursus');
        Schema::dropIfExists('type_demandes');
        Schema::dropIfExists('mode_admissions');
        Schema::dropIfExists('cycle_filiere_type_document');
        Schema::dropIfExists('documents');
        Schema::dropIfExists('type_documents');
        Schema::dropIfExists('etudiants');
        Schema::dropIfExists('personnes');
        Schema::dropIfExists('demandes');
        Schema::dropIfExists('cycle_filiere');
        Schema::dropIfExists('filieres');
        Schema::dropIfExists('cycles');
        Schema::dropIfExists('etablissements');
    }
}
